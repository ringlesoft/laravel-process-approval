<?php

namespace RingleSoft\LaravelProcessApproval\Tests\Feature;

use Illuminate\Support\Facades\Event;
use RingleSoft\LaravelProcessApproval\Events\ProcessApprovalCompletedEvent;
use RingleSoft\LaravelProcessApproval\Events\ProcessDiscardedEvent;
use RingleSoft\LaravelProcessApproval\Events\ProcessRejectedEvent;
use RingleSoft\LaravelProcessApproval\Events\ProcessReturnedEvent;
use RingleSoft\LaravelProcessApproval\Events\ProcessSubmittedEvent;
use RingleSoft\LaravelProcessApproval\Tests\TestCase;
use Workbench\App\Models\TestModel;

class EventDispatchTest extends TestCase
{
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        TestModel::seedSteps();
        $this->login();
    }


//    public function testProcessSubmittedEventDispatched(): void
//    {
//        Event::fake();
//        $testModel = TestModel::createSample();
//        $testModel->submit();
//        $testModel->refresh();
//        Event::assertDispatched(ProcessSubmittedEvent::class);
//    }
//
//    public function testProcessApprovedEventDispatched(): void
//    {
//        Event::fake();
//        $testModel = TestModel::readyForApproval();
//        $testModel->approve('I Approve this');
//        $testModel->refresh();
//        Event::assertDispatched(ProcessSubmittedEvent::class);
//    }
//
//    public function testProcessRejectedEventDispatched(): void
//    {
//            Event::fake();
//            $testModel = TestModel::readyForApproval();
//            $testModel->reject('I Reject this');
//            $testModel->refresh();
//            Event::assertDispatched(ProcessRejectedEvent::class);
//    }
//
//    public function testProcessDiscardedEventDispatched(): void
//    {
//            $testModel = TestModel::readyForApproval();
//            $testModel->reject("I dont want it");
//            $testModel->refresh();
//            Event::fake();
//            $testModel->discard('I Discard this');
//            $testModel->refresh();
//            Event::assertDispatched(ProcessDiscardedEvent::class);
//    }
//
//    public function testProcessReturnedEventDispatched(): void
//    {
//        $testModel = TestModel::readyForApproval();
//        $testModel->approve('I Approve this');
//        $testModel->refresh();
//        Event::fake();
//        $testModel->return('I Return this');
//        $testModel->refresh();
//        Event::assertDispatched(ProcessReturnedEvent::class);
//    }
//
//    public function testProcessApprovalCompletedEventDispatched(): void
//    {
//        $testModel = TestModel::readyForApproval();
//        foreach ($testModel->approvalFlowSteps as  $step) {
//            $testModel->approve('I Approve this');
//            $testModel->refresh();
//        }
//        $testModel->refresh();
//        Event::fake();
//        Event::assertDispatched(ProcessApprovalCompletedEvent::class);
//    }
}
